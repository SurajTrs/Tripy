/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/book-trip/route";
exports.ids = ["app/api/book-trip/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbook-trip%2Froute&page=%2Fapi%2Fbook-trip%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-trip%2Froute.ts&appDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbook-trip%2Froute&page=%2Fapi%2Fbook-trip%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-trip%2Froute.ts&appDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_surajrawat_Downloads_Tripy_app_api_book_trip_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/book-trip/route.ts */ \"(rsc)/./app/api/book-trip/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"export\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/book-trip/route\",\n        pathname: \"/api/book-trip\",\n        filename: \"route\",\n        bundlePath: \"app/api/book-trip/route\"\n    },\n    resolvedPagePath: \"/Users/surajrawat/Downloads/Tripy/app/api/book-trip/route.ts\",\n    nextConfigOutput,\n    userland: _Users_surajrawat_Downloads_Tripy_app_api_book_trip_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZib29rLXRyaXAlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmJvb2stdHJpcCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmJvb2stdHJpcCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnN1cmFqcmF3YXQlMkZEb3dubG9hZHMlMkZUcmlweSUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZzdXJhanJhd2F0JTJGRG93bmxvYWRzJTJGVHJpcHkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9ZXhwb3J0JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQ1k7QUFDekY7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHlHQUFtQjtBQUMzQztBQUNBLGNBQWMsa0VBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBc0Q7QUFDOUQ7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDMEY7O0FBRTFGIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy9zdXJhanJhd2F0L0Rvd25sb2Fkcy9UcmlweS9hcHAvYXBpL2Jvb2stdHJpcC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJleHBvcnRcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYm9vay10cmlwL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYm9vay10cmlwXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9ib29rLXRyaXAvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvc3VyYWpyYXdhdC9Eb3dubG9hZHMvVHJpcHkvYXBwL2FwaS9ib29rLXRyaXAvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbook-trip%2Froute&page=%2Fapi%2Fbook-trip%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-trip%2Froute.ts&appDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./app/api/book-trip/route.ts":
/*!************************************!*\
  !*** ./app/api/book-trip/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_nlpParser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/nlpParser */ \"(rsc)/./lib/nlpParser.ts\");\n/* harmony import */ var _lib_location__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/location */ \"(rsc)/./lib/location.ts\");\n// api/trip/route.ts\n\n\n // Assuming this file exists and works as expected\n// Questions to ask the user for missing trip details\nconst QUESTIONS = {\n    from: 'Kahan se start karna hai? (Origin city)',\n    to: 'Kahan jana hai? (Destination city)',\n    date: 'Travel ki date kya hai? (e.g. 18 August 2025)',\n    budget: 'Aapka budget preference kya hai? Luxury, Medium, ya Budget-friendly?',\n    groupSize: 'Solo ja rahe ho ya group mein?',\n    mode: 'Kaunsa transport mode chahiye? Train, Bus, ya Flight?'\n};\n/**\n * Normalizes raw budget input from the user to a predefined TripContext budget type.\n * This function has been enhanced to recognize more variations of budget preferences.\n * @param raw The raw string input from the user.\n * @returns The normalized budget category or undefined if no match.\n */ const normalizeBudget = (raw)=>{\n    const txt = raw.toLowerCase().replace(/[\"']/g, '').trim();\n    // Direct and common phrase matches\n    if (txt.includes('luxury')) return 'Luxury';\n    if (txt.includes('medium')) return 'Medium';\n    // Prioritize 'budget-friendly' full phrase, then just 'budget'\n    if (txt.includes('budget-friendly') || txt.includes('budget')) return 'Budget-friendly';\n    // Abbreviation/partial matches for robustness\n    if (txt.includes('lux')) return 'Luxury';\n    if (txt.includes('med')) return 'Medium';\n    if (txt.includes('cheap') || txt.includes('low cost') || txt.includes('economical')) return 'Budget-friendly';\n    return undefined;\n};\n/**\n * Normalizes raw transport mode input from the user to a predefined TripContext mode type.\n * @param raw The raw string input from the user.\n * @returns The normalized mode of transport or undefined if no match.\n */ const normalizeMode = (raw)=>{\n    const txt = raw.toLowerCase();\n    if (txt.includes('train')) return 'Train';\n    if (txt.includes('bus')) return 'Bus';\n    if (txt.includes('flight')) return 'Flight';\n    return undefined;\n};\n/**\n * Generates a random price within a given range.\n * @param min The minimum price.\n * @param max The maximum price.\n * @returns A random integer price.\n */ const getRandomPrice = (min, max)=>Math.floor(Math.random() * (max - min + 1)) + min;\n/**\n * Handles POST requests to the trip planning API.\n * This is the main entry point for the conversational trip planning assistant.\n */ async function POST(req) {\n    try {\n        // Destructure incoming request body with default values\n        // IMPORTANT: For conversational flow, the client must send the 'context' object received\n        // from the previous API response back in subsequent requests.\n        const { message, lat, lng, context: ctxIn = {}, ask } = await req.json();\n        // Validate the incoming message\n        if (typeof message !== 'string' || !message.trim()) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Invalid or missing message.'\n            }, {\n                status: 400\n            });\n        }\n        // Clone existing context to avoid direct mutation of the input context\n        const context = {\n            ...ctxIn\n        };\n        // Determine if the user is answering a specific question or providing initial details\n        if (ask) {\n            // User is answering the last asked slot\n            const ans = message.trim();\n            switch(ask){\n                case 'from':\n                    context.from = ans;\n                    break;\n                case 'to':\n                    context.to = ans;\n                    break;\n                case 'date':\n                    context.date = ans;\n                    break;\n                case 'budget':\n                    context.budget = normalizeBudget(ans);\n                    break;\n                case 'groupSize':\n                    context.groupSize = ans;\n                    break;\n                case 'mode':\n                    context.mode = normalizeMode(ans);\n                    break;\n                default:\n                    // Handle unexpected 'ask' values gracefully\n                    console.warn(`Unexpected 'ask' parameter received: ${ask}`);\n                    break;\n            }\n        } else {\n            // First-turn or general input: try NLP extraction for from/to/date only\n            const parsed = await (0,_lib_nlpParser__WEBPACK_IMPORTED_MODULE_1__.parseTripDetails)(message);\n            // Only update context if the parsed value is not null and context doesn't already have it\n            context.from ||= parsed.from ?? undefined;\n            context.to ||= parsed.to ?? undefined;\n            context.date ||= parsed.date ?? undefined;\n        }\n        // GPS fallback for origin if 'from' is still missing\n        if (!context.from && lat != null && lng != null) {\n            try {\n                const liveLocation = await (0,_lib_location__WEBPACK_IMPORTED_MODULE_2__.getLiveLocation)(lat, lng);\n                if (liveLocation) {\n                    context.from = liveLocation;\n                } else {\n                    console.warn('Could not determine live location from provided coordinates.');\n                }\n            } catch (locationError) {\n                console.error('Error getting live location:', locationError);\n            // Continue without live location if there's an error\n            }\n        }\n        // Define the order of slots to check for completeness\n        const slots = [\n            'from',\n            'to',\n            'date',\n            'budget',\n            'groupSize',\n            'mode'\n        ];\n        // Find the first missing slot\n        const missing = slots.find((key)=>!context[key]);\n        // If there's a missing slot, ask the user for it\n        if (missing) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                assistantFollowUp: true,\n                ask: missing,\n                context,\n                message: QUESTIONS[missing]\n            });\n        }\n        // All required slots are filled—build the mock trip plan\n        // Ensure mode and budget are defined before accessing them, though the 'missing' check above should guarantee this.\n        if (!context.mode || !context.budget || !context.from || !context.to || !context.date) {\n            // This case should ideally not be hit if the 'missing' check is exhaustive\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: 'Missing critical trip details to finalize plan.'\n            }, {\n                status: 500\n            });\n        }\n        const transportPrice = {\n            Train: getRandomPrice(800, 1800),\n            Bus: getRandomPrice(600, 1400),\n            Flight: getRandomPrice(1500, 4500)\n        }[context.mode];\n        const hotelPrice = {\n            Luxury: getRandomPrice(4000, 6000),\n            Medium: getRandomPrice(2500, 4000),\n            'Budget-friendly': getRandomPrice(1200, 2500)\n        }[context.budget];\n        const cabOptions = [\n            {\n                provider: 'Uber',\n                price: getRandomPrice(300, 450)\n            },\n            {\n                provider: 'Ola',\n                price: getRandomPrice(280, 400)\n            },\n            {\n                provider: 'Rapido',\n                price: getRandomPrice(200, 350)\n            }\n        ];\n        // Find the cheapest cab for station drop-off and most expensive for hotel drop-off (mock logic)\n        const cabToStation = cabOptions.reduce((a, b)=>a.price < b.price ? a : b);\n        const cabToHotel = cabOptions.reduce((a, b)=>a.price > b.price ? a : b);\n        const total = transportPrice + hotelPrice + cabToStation.price + cabToHotel.price;\n        // Construct the final trip plan object\n        const tripPlan = {\n            cabToStation: {\n                ...cabToStation,\n                from: `${context.from} City`,\n                to: `${context.from} Station`\n            },\n            transport: {\n                mode: context.mode,\n                name: `${context.from}-${context.to} ${context.mode} Service`,\n                from: context.from,\n                to: context.to,\n                date: context.date,\n                price: transportPrice\n            },\n            cabToHotel: {\n                ...cabToHotel,\n                from: `${context.to} Station`,\n                to: `Hotel ${context.to}`\n            },\n            hotel: {\n                name: `Hotel ${context.to}`,\n                price: hotelPrice,\n                category: context.budget\n            },\n            food: [\n                `Cafe ${context.to}`,\n                'Local Tadka',\n                'Chai Point'\n            ],\n            groupSize: context.groupSize,\n            total\n        };\n        // Return the successful trip plan\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            from: context.from,\n            to: context.to,\n            data: tripPlan,\n            message: `Done! Here’s your trip plan from ${context.from} to ${context.to} on ${context.date}. Shall I book it?`\n        });\n    } catch (error) {\n        console.error('Trip planning failed:', error);\n        let errorMessage = 'Something went wrong while planning your trip.';\n        if (error instanceof Error) {\n            errorMessage = error.message;\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: errorMessage\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/book-trip/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/location.ts":
/*!*************************!*\
  !*** ./lib/location.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLiveLocation: () => (/* binding */ getLiveLocation)\n/* harmony export */ });\n// lib/location.ts\nasync function getLiveLocation(lat, lng) {\n    try {\n        if (lat && lng) {\n            const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`);\n            const data = await response.json();\n            return data.address?.city || data.address?.town || data.address?.village || \"Unknown\";\n        }\n        return \"Delhi\"; // fallback\n    } catch (error) {\n        console.error(\"Failed to get location from coordinates\", error);\n        return \"Delhi\"; // fallback\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbG9jYXRpb24udHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGtCQUFrQjtBQUNYLGVBQWVBLGdCQUFnQkMsR0FBWSxFQUFFQyxHQUFZO0lBQzlELElBQUk7UUFDRixJQUFJRCxPQUFPQyxLQUFLO1lBQ2QsTUFBTUMsV0FBVyxNQUFNQyxNQUFNLENBQUMsNERBQTRELEVBQUVILElBQUksS0FBSyxFQUFFQyxLQUFLO1lBQzVHLE1BQU1HLE9BQU8sTUFBTUYsU0FBU0csSUFBSTtZQUNoQyxPQUFPRCxLQUFLRSxPQUFPLEVBQUVDLFFBQVFILEtBQUtFLE9BQU8sRUFBRUUsUUFBUUosS0FBS0UsT0FBTyxFQUFFRyxXQUFXO1FBQzlFO1FBQ0EsT0FBTyxTQUFTLFdBQVc7SUFDN0IsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFELEtBQUssQ0FBQywyQ0FBMkNBO1FBQ3pELE9BQU8sU0FBUyxXQUFXO0lBQzdCO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zdXJhanJhd2F0L0Rvd25sb2Fkcy9UcmlweS9saWIvbG9jYXRpb24udHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL2xvY2F0aW9uLnRzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TGl2ZUxvY2F0aW9uKGxhdD86IG51bWJlciwgbG5nPzogbnVtYmVyKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgdHJ5IHtcbiAgICBpZiAobGF0ICYmIGxuZykge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9ub21pbmF0aW0ub3BlbnN0cmVldG1hcC5vcmcvcmV2ZXJzZT9mb3JtYXQ9anNvbiZsYXQ9JHtsYXR9Jmxvbj0ke2xuZ31gKTtcbiAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICByZXR1cm4gZGF0YS5hZGRyZXNzPy5jaXR5IHx8IGRhdGEuYWRkcmVzcz8udG93biB8fCBkYXRhLmFkZHJlc3M/LnZpbGxhZ2UgfHwgXCJVbmtub3duXCI7XG4gICAgfVxuICAgIHJldHVybiBcIkRlbGhpXCI7IC8vIGZhbGxiYWNrXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBnZXQgbG9jYXRpb24gZnJvbSBjb29yZGluYXRlc1wiLCBlcnJvcik7XG4gICAgcmV0dXJuIFwiRGVsaGlcIjsgLy8gZmFsbGJhY2tcbiAgfVxufVxuIl0sIm5hbWVzIjpbImdldExpdmVMb2NhdGlvbiIsImxhdCIsImxuZyIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsImFkZHJlc3MiLCJjaXR5IiwidG93biIsInZpbGxhZ2UiLCJlcnJvciIsImNvbnNvbGUiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/location.ts\n");

/***/ }),

/***/ "(rsc)/./lib/nlpParser.ts":
/*!**************************!*\
  !*** ./lib/nlpParser.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseTripDetails: () => (/* binding */ parseTripDetails)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"(rsc)/./node_modules/openai/index.mjs\");\n// lib/nlpParser.ts\n\n/**\n * Parses trip details from a user message using an OpenAI model.\n * @param message The user's input message.\n * @returns A promise resolving to ParsedTripDetails.\n */ async function parseTripDetails(message) {\n    // Ensure OPENROUTER_API_KEY is available before proceeding\n    const apiKey = process.env.OPENROUTER_API_KEY;\n    if (!apiKey) {\n        console.error('OPENROUTER_API_KEY is not set in environment variables.');\n        // Return a default empty object or throw an error based on desired behavior\n        return {\n            from: null,\n            to: null,\n            date: null,\n            intent: null\n        };\n    }\n    const openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n        apiKey: apiKey,\n        baseURL: 'https://openrouter.ai/api/v1'\n    });\n    const systemPrompt = `\nYou are an expert travel assistant API. Your job is to extract structured travel information from a user's message.\n\nThe user's message will be a request to book a trip.\nExtract the departure city, the destination city, and the date of travel.\n\nReply ONLY with a valid JSON object in the following format:\n{\n  \"from\": \"Departure City\",\n  \"to\": \"Destination City\",\n  \"date\": \"Date in natural language (e.g., '30 August', 'tomorrow', 'next Friday')\",\n  \"intent\": \"book_trip\"\n}\n\nIf any piece of information (like 'from', 'to', or 'date') is not present in the user's message, return null for that field. Do not make up information.\nEnsure the response is a single JSON object with no extra explanation.\n`;\n    try {\n        const completion = await openai.chat.completions.create({\n            model: 'openai/gpt-3.5-turbo',\n            messages: [\n                {\n                    role: 'system',\n                    content: systemPrompt.trim()\n                },\n                {\n                    role: 'user',\n                    content: message\n                }\n            ],\n            temperature: 0\n        });\n        const raw = completion.choices?.[0]?.message?.content;\n        if (!raw) {\n            throw new Error('No response content received from the AI model.');\n        }\n        let parsedRaw;\n        try {\n            parsedRaw = JSON.parse(raw.trim());\n        } catch (err) {\n            console.error('❌ Failed to parse JSON from AI response:', err);\n            // Provide more context in the error message for debugging\n            throw new Error(`AI response is not valid JSON:\\n${raw}\\nParsing error: ${err instanceof Error ? err.message : String(err)}`);\n        }\n        // Ensure parsedRaw is an object and cast it for type safety\n        const parsed = parsedRaw && typeof parsedRaw === 'object' && !Array.isArray(parsedRaw) ? parsedRaw : {};\n        return {\n            from: typeof parsed.from === 'string' ? parsed.from : null,\n            to: typeof parsed.to === 'string' ? parsed.to : null,\n            date: typeof parsed.date === 'string' ? parsed.date : null,\n            intent: typeof parsed.intent === 'string' ? parsed.intent : null\n        };\n    } catch (error) {\n        console.error('❌ Error parsing trip details with AI:', error);\n        // Return nulls on error, allowing the main handler to ask follow-up questions\n        return {\n            from: null,\n            to: null,\n            date: null,\n            intent: null\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvbmxwUGFyc2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsbUJBQW1CO0FBQ1M7QUFTNUI7Ozs7Q0FJQyxHQUNNLGVBQWVDLGlCQUNwQkMsT0FBZTtJQUVmLDJEQUEyRDtJQUMzRCxNQUFNQyxTQUFTQyxRQUFRQyxHQUFHLENBQUNDLGtCQUFrQjtJQUM3QyxJQUFJLENBQUNILFFBQVE7UUFDWEksUUFBUUMsS0FBSyxDQUFDO1FBQ2QsNEVBQTRFO1FBQzVFLE9BQU87WUFBRUMsTUFBTTtZQUFNQyxJQUFJO1lBQU1DLE1BQU07WUFBTUMsUUFBUTtRQUFLO0lBQzFEO0lBRUEsTUFBTUMsU0FBUyxJQUFJYiw4Q0FBTUEsQ0FBQztRQUN4QkcsUUFBUUE7UUFDUlcsU0FBUztJQUNYO0lBRUEsTUFBTUMsZUFBZSxDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O0FBZ0J4QixDQUFDO0lBRUMsSUFBSTtRQUNGLE1BQU1DLGFBQWEsTUFBTUgsT0FBT0ksSUFBSSxDQUFDQyxXQUFXLENBQUNDLE1BQU0sQ0FBQztZQUN0REMsT0FBTztZQUNQQyxVQUFVO2dCQUNSO29CQUFFQyxNQUFNO29CQUFVQyxTQUFTUixhQUFhUyxJQUFJO2dCQUFHO2dCQUMvQztvQkFBRUYsTUFBTTtvQkFBUUMsU0FBU3JCO2dCQUFRO2FBQ2xDO1lBQ0R1QixhQUFhO1FBQ2Y7UUFFQSxNQUFNQyxNQUFNVixXQUFXVyxPQUFPLEVBQUUsQ0FBQyxFQUFFLEVBQUV6QixTQUFTcUI7UUFDOUMsSUFBSSxDQUFDRyxLQUFLO1lBQ1IsTUFBTSxJQUFJRSxNQUFNO1FBQ2xCO1FBRUEsSUFBSUM7UUFDSixJQUFJO1lBQ0ZBLFlBQVlDLEtBQUtDLEtBQUssQ0FBQ0wsSUFBSUYsSUFBSTtRQUNqQyxFQUFFLE9BQU9RLEtBQWM7WUFDckJ6QixRQUFRQyxLQUFLLENBQUMsNENBQTRDd0I7WUFDMUQsMERBQTBEO1lBQzFELE1BQU0sSUFBSUosTUFBTSxDQUFDLGdDQUFnQyxFQUFFRixJQUFJLGlCQUFpQixFQUFFTSxlQUFlSixRQUFRSSxJQUFJOUIsT0FBTyxHQUFHK0IsT0FBT0QsTUFBTTtRQUM5SDtRQUVBLDREQUE0RDtRQUM1RCxNQUFNRSxTQUNKTCxhQUFhLE9BQU9BLGNBQWMsWUFBWSxDQUFDTSxNQUFNQyxPQUFPLENBQUNQLGFBQ3hEQSxZQUNELENBQUM7UUFFUCxPQUFPO1lBQ0xwQixNQUFNLE9BQU95QixPQUFPekIsSUFBSSxLQUFLLFdBQVd5QixPQUFPekIsSUFBSSxHQUFHO1lBQ3REQyxJQUFJLE9BQU93QixPQUFPeEIsRUFBRSxLQUFLLFdBQVd3QixPQUFPeEIsRUFBRSxHQUFHO1lBQ2hEQyxNQUFNLE9BQU91QixPQUFPdkIsSUFBSSxLQUFLLFdBQVd1QixPQUFPdkIsSUFBSSxHQUFHO1lBQ3REQyxRQUFRLE9BQU9zQixPQUFPdEIsTUFBTSxLQUFLLFdBQVdzQixPQUFPdEIsTUFBTSxHQUFHO1FBQzlEO0lBQ0YsRUFBRSxPQUFPSixPQUFnQjtRQUN2QkQsUUFBUUMsS0FBSyxDQUFDLHlDQUF5Q0E7UUFDdkQsOEVBQThFO1FBQzlFLE9BQU87WUFDTEMsTUFBTTtZQUNOQyxJQUFJO1lBQ0pDLE1BQU07WUFDTkMsUUFBUTtRQUNWO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL3N1cmFqcmF3YXQvRG93bmxvYWRzL1RyaXB5L2xpYi9ubHBQYXJzZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL25scFBhcnNlci50c1xuaW1wb3J0IE9wZW5BSSBmcm9tICdvcGVuYWknO1xuXG5leHBvcnQgdHlwZSBQYXJzZWRUcmlwRGV0YWlscyA9IHtcbiAgZnJvbT86IHN0cmluZyB8IG51bGw7XG4gIHRvPzogc3RyaW5nIHwgbnVsbDtcbiAgZGF0ZT86IHN0cmluZyB8IG51bGw7XG4gIGludGVudD86IHN0cmluZyB8IG51bGw7XG59O1xuXG4vKipcbiAqIFBhcnNlcyB0cmlwIGRldGFpbHMgZnJvbSBhIHVzZXIgbWVzc2FnZSB1c2luZyBhbiBPcGVuQUkgbW9kZWwuXG4gKiBAcGFyYW0gbWVzc2FnZSBUaGUgdXNlcidzIGlucHV0IG1lc3NhZ2UuXG4gKiBAcmV0dXJucyBBIHByb21pc2UgcmVzb2x2aW5nIHRvIFBhcnNlZFRyaXBEZXRhaWxzLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcGFyc2VUcmlwRGV0YWlscyhcbiAgbWVzc2FnZTogc3RyaW5nXG4pOiBQcm9taXNlPFBhcnNlZFRyaXBEZXRhaWxzPiB7XG4gIC8vIEVuc3VyZSBPUEVOUk9VVEVSX0FQSV9LRVkgaXMgYXZhaWxhYmxlIGJlZm9yZSBwcm9jZWVkaW5nXG4gIGNvbnN0IGFwaUtleSA9IHByb2Nlc3MuZW52Lk9QRU5ST1VURVJfQVBJX0tFWTtcbiAgaWYgKCFhcGlLZXkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdPUEVOUk9VVEVSX0FQSV9LRVkgaXMgbm90IHNldCBpbiBlbnZpcm9ubWVudCB2YXJpYWJsZXMuJyk7XG4gICAgLy8gUmV0dXJuIGEgZGVmYXVsdCBlbXB0eSBvYmplY3Qgb3IgdGhyb3cgYW4gZXJyb3IgYmFzZWQgb24gZGVzaXJlZCBiZWhhdmlvclxuICAgIHJldHVybiB7IGZyb206IG51bGwsIHRvOiBudWxsLCBkYXRlOiBudWxsLCBpbnRlbnQ6IG51bGwgfTtcbiAgfVxuXG4gIGNvbnN0IG9wZW5haSA9IG5ldyBPcGVuQUkoe1xuICAgIGFwaUtleTogYXBpS2V5LCAvLyBVc2UgdGhlIGNoZWNrZWQgQVBJIGtleVxuICAgIGJhc2VVUkw6ICdodHRwczovL29wZW5yb3V0ZXIuYWkvYXBpL3YxJyxcbiAgfSk7XG5cbiAgY29uc3Qgc3lzdGVtUHJvbXB0ID0gYFxuWW91IGFyZSBhbiBleHBlcnQgdHJhdmVsIGFzc2lzdGFudCBBUEkuIFlvdXIgam9iIGlzIHRvIGV4dHJhY3Qgc3RydWN0dXJlZCB0cmF2ZWwgaW5mb3JtYXRpb24gZnJvbSBhIHVzZXIncyBtZXNzYWdlLlxuXG5UaGUgdXNlcidzIG1lc3NhZ2Ugd2lsbCBiZSBhIHJlcXVlc3QgdG8gYm9vayBhIHRyaXAuXG5FeHRyYWN0IHRoZSBkZXBhcnR1cmUgY2l0eSwgdGhlIGRlc3RpbmF0aW9uIGNpdHksIGFuZCB0aGUgZGF0ZSBvZiB0cmF2ZWwuXG5cblJlcGx5IE9OTFkgd2l0aCBhIHZhbGlkIEpTT04gb2JqZWN0IGluIHRoZSBmb2xsb3dpbmcgZm9ybWF0Olxue1xuICBcImZyb21cIjogXCJEZXBhcnR1cmUgQ2l0eVwiLFxuICBcInRvXCI6IFwiRGVzdGluYXRpb24gQ2l0eVwiLFxuICBcImRhdGVcIjogXCJEYXRlIGluIG5hdHVyYWwgbGFuZ3VhZ2UgKGUuZy4sICczMCBBdWd1c3QnLCAndG9tb3Jyb3cnLCAnbmV4dCBGcmlkYXknKVwiLFxuICBcImludGVudFwiOiBcImJvb2tfdHJpcFwiXG59XG5cbklmIGFueSBwaWVjZSBvZiBpbmZvcm1hdGlvbiAobGlrZSAnZnJvbScsICd0bycsIG9yICdkYXRlJykgaXMgbm90IHByZXNlbnQgaW4gdGhlIHVzZXIncyBtZXNzYWdlLCByZXR1cm4gbnVsbCBmb3IgdGhhdCBmaWVsZC4gRG8gbm90IG1ha2UgdXAgaW5mb3JtYXRpb24uXG5FbnN1cmUgdGhlIHJlc3BvbnNlIGlzIGEgc2luZ2xlIEpTT04gb2JqZWN0IHdpdGggbm8gZXh0cmEgZXhwbGFuYXRpb24uXG5gO1xuXG4gIHRyeSB7XG4gICAgY29uc3QgY29tcGxldGlvbiA9IGF3YWl0IG9wZW5haS5jaGF0LmNvbXBsZXRpb25zLmNyZWF0ZSh7XG4gICAgICBtb2RlbDogJ29wZW5haS9ncHQtMy41LXR1cmJvJyxcbiAgICAgIG1lc3NhZ2VzOiBbXG4gICAgICAgIHsgcm9sZTogJ3N5c3RlbScsIGNvbnRlbnQ6IHN5c3RlbVByb21wdC50cmltKCkgfSxcbiAgICAgICAgeyByb2xlOiAndXNlcicsIGNvbnRlbnQ6IG1lc3NhZ2UgfSxcbiAgICAgIF0sXG4gICAgICB0ZW1wZXJhdHVyZTogMCxcbiAgICB9KTtcblxuICAgIGNvbnN0IHJhdyA9IGNvbXBsZXRpb24uY2hvaWNlcz8uWzBdPy5tZXNzYWdlPy5jb250ZW50O1xuICAgIGlmICghcmF3KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHJlc3BvbnNlIGNvbnRlbnQgcmVjZWl2ZWQgZnJvbSB0aGUgQUkgbW9kZWwuJyk7XG4gICAgfVxuXG4gICAgbGV0IHBhcnNlZFJhdzogdW5rbm93bjtcbiAgICB0cnkge1xuICAgICAgcGFyc2VkUmF3ID0gSlNPTi5wYXJzZShyYXcudHJpbSgpKTtcbiAgICB9IGNhdGNoIChlcnI6IHVua25vd24pIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBGYWlsZWQgdG8gcGFyc2UgSlNPTiBmcm9tIEFJIHJlc3BvbnNlOicsIGVycik7XG4gICAgICAvLyBQcm92aWRlIG1vcmUgY29udGV4dCBpbiB0aGUgZXJyb3IgbWVzc2FnZSBmb3IgZGVidWdnaW5nXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEFJIHJlc3BvbnNlIGlzIG5vdCB2YWxpZCBKU09OOlxcbiR7cmF3fVxcblBhcnNpbmcgZXJyb3I6ICR7ZXJyIGluc3RhbmNlb2YgRXJyb3IgPyBlcnIubWVzc2FnZSA6IFN0cmluZyhlcnIpfWApO1xuICAgIH1cblxuICAgIC8vIEVuc3VyZSBwYXJzZWRSYXcgaXMgYW4gb2JqZWN0IGFuZCBjYXN0IGl0IGZvciB0eXBlIHNhZmV0eVxuICAgIGNvbnN0IHBhcnNlZCA9XG4gICAgICBwYXJzZWRSYXcgJiYgdHlwZW9mIHBhcnNlZFJhdyA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkocGFyc2VkUmF3KVxuICAgICAgICA/IChwYXJzZWRSYXcgYXMgUmVjb3JkPHN0cmluZywgdW5rbm93bj4pXG4gICAgICAgIDoge307XG5cbiAgICByZXR1cm4ge1xuICAgICAgZnJvbTogdHlwZW9mIHBhcnNlZC5mcm9tID09PSAnc3RyaW5nJyA/IHBhcnNlZC5mcm9tIDogbnVsbCxcbiAgICAgIHRvOiB0eXBlb2YgcGFyc2VkLnRvID09PSAnc3RyaW5nJyA/IHBhcnNlZC50byA6IG51bGwsXG4gICAgICBkYXRlOiB0eXBlb2YgcGFyc2VkLmRhdGUgPT09ICdzdHJpbmcnID8gcGFyc2VkLmRhdGUgOiBudWxsLFxuICAgICAgaW50ZW50OiB0eXBlb2YgcGFyc2VkLmludGVudCA9PT0gJ3N0cmluZycgPyBwYXJzZWQuaW50ZW50IDogbnVsbCxcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcjogdW5rbm93bikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvciBwYXJzaW5nIHRyaXAgZGV0YWlscyB3aXRoIEFJOicsIGVycm9yKTtcbiAgICAvLyBSZXR1cm4gbnVsbHMgb24gZXJyb3IsIGFsbG93aW5nIHRoZSBtYWluIGhhbmRsZXIgdG8gYXNrIGZvbGxvdy11cCBxdWVzdGlvbnNcbiAgICByZXR1cm4ge1xuICAgICAgZnJvbTogbnVsbCxcbiAgICAgIHRvOiBudWxsLFxuICAgICAgZGF0ZTogbnVsbCxcbiAgICAgIGludGVudDogbnVsbCxcbiAgICB9O1xuICB9XG59Il0sIm5hbWVzIjpbIk9wZW5BSSIsInBhcnNlVHJpcERldGFpbHMiLCJtZXNzYWdlIiwiYXBpS2V5IiwicHJvY2VzcyIsImVudiIsIk9QRU5ST1VURVJfQVBJX0tFWSIsImNvbnNvbGUiLCJlcnJvciIsImZyb20iLCJ0byIsImRhdGUiLCJpbnRlbnQiLCJvcGVuYWkiLCJiYXNlVVJMIiwic3lzdGVtUHJvbXB0IiwiY29tcGxldGlvbiIsImNoYXQiLCJjb21wbGV0aW9ucyIsImNyZWF0ZSIsIm1vZGVsIiwibWVzc2FnZXMiLCJyb2xlIiwiY29udGVudCIsInRyaW0iLCJ0ZW1wZXJhdHVyZSIsInJhdyIsImNob2ljZXMiLCJFcnJvciIsInBhcnNlZFJhdyIsIkpTT04iLCJwYXJzZSIsImVyciIsIlN0cmluZyIsInBhcnNlZCIsIkFycmF5IiwiaXNBcnJheSJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/nlpParser.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/openai"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fbook-trip%2Froute&page=%2Fapi%2Fbook-trip%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fbook-trip%2Froute.ts&appDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fsurajrawat%2FDownloads%2FTripy&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=export&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();