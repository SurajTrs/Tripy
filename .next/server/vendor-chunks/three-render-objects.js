"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/three-render-objects";
exports.ids = ["vendor-chunks/three-render-objects"];
exports.modules = {

/***/ "(ssr)/./node_modules/three-render-objects/dist/three-render-objects.mjs":
/*!*************************************************************************!*\
  !*** ./node_modules/three-render-objects/dist/three-render-objects.mjs ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ threeRenderObjects)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.core.js\");\n/* harmony import */ var three_webgpu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! three/webgpu */ \"(ssr)/./node_modules/three/build/three.webgpu.js\");\n/* harmony import */ var three_examples_jsm_controls_TrackballControls_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! three/examples/jsm/controls/TrackballControls.js */ \"(ssr)/./node_modules/three/examples/jsm/controls/TrackballControls.js\");\n/* harmony import */ var three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! three/examples/jsm/controls/OrbitControls.js */ \"(ssr)/./node_modules/three/examples/jsm/controls/OrbitControls.js\");\n/* harmony import */ var three_examples_jsm_controls_FlyControls_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! three/examples/jsm/controls/FlyControls.js */ \"(ssr)/./node_modules/three/examples/jsm/controls/FlyControls.js\");\n/* harmony import */ var three_examples_jsm_postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! three/examples/jsm/postprocessing/EffectComposer.js */ \"(ssr)/./node_modules/three/examples/jsm/postprocessing/EffectComposer.js\");\n/* harmony import */ var three_examples_jsm_postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! three/examples/jsm/postprocessing/RenderPass.js */ \"(ssr)/./node_modules/three/examples/jsm/postprocessing/RenderPass.js\");\n/* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! polished */ \"(ssr)/./node_modules/polished/dist/polished.esm.js\");\n/* harmony import */ var _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tweenjs/tween.js */ \"(ssr)/./node_modules/@tweenjs/tween.js/dist/tween.esm.js\");\n/* harmony import */ var accessor_fn__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! accessor-fn */ \"(ssr)/./node_modules/accessor-fn/dist/accessor-fn.mjs\");\n/* harmony import */ var kapsule__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! kapsule */ \"(ssr)/./node_modules/kapsule/dist/kapsule.mjs\");\n/* harmony import */ var float_tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! float-tooltip */ \"(ssr)/./node_modules/float-tooltip/dist/float-tooltip.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".scene-nav-info {\\n  position: absolute;\\n  bottom: 5px;\\n  width: 100%;\\n  text-align: center;\\n  color: slategrey;\\n  opacity: 0.7;\\n  font-size: 10px;\\n  font-family: sans-serif;\\n  pointer-events: none;\\n  user-select: none;\\n}\\n\\n.scene-container canvas:focus {\\n  outline: none;\\n}\";\nstyleInject(css_248z);\n\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nfunction _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: true,\n    configurable: true,\n    writable: true\n  }) : e[r] = t, e;\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = true,\n      o = false;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) ; else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = true, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(r, e) {\n  return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r);\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\n\nvar three = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  WebGLRenderer: three__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer,\n  Scene: three__WEBPACK_IMPORTED_MODULE_4__.Scene,\n  PerspectiveCamera: three__WEBPACK_IMPORTED_MODULE_4__.PerspectiveCamera,\n  Raycaster: three__WEBPACK_IMPORTED_MODULE_4__.Raycaster,\n  SRGBColorSpace: three__WEBPACK_IMPORTED_MODULE_4__.SRGBColorSpace,\n  TextureLoader: three__WEBPACK_IMPORTED_MODULE_4__.TextureLoader,\n  Vector2: three__WEBPACK_IMPORTED_MODULE_4__.Vector2,\n  Vector3: three__WEBPACK_IMPORTED_MODULE_4__.Vector3,\n  Box3: three__WEBPACK_IMPORTED_MODULE_4__.Box3,\n  Color: three__WEBPACK_IMPORTED_MODULE_4__.Color,\n  Mesh: three__WEBPACK_IMPORTED_MODULE_4__.Mesh,\n  SphereGeometry: three__WEBPACK_IMPORTED_MODULE_4__.SphereGeometry,\n  MeshBasicMaterial: three__WEBPACK_IMPORTED_MODULE_4__.MeshBasicMaterial,\n  BackSide: three__WEBPACK_IMPORTED_MODULE_4__.BackSide,\n  Clock: three__WEBPACK_IMPORTED_MODULE_4__.Clock\n};\nvar threeRenderObjects = (0,kapsule__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({\n  props: {\n    width: {\n      \"default\": window.innerWidth,\n      onChange: function onChange(width, state, prevWidth) {\n        isNaN(width) && (state.width = prevWidth);\n      }\n    },\n    height: {\n      \"default\": window.innerHeight,\n      onChange: function onChange(height, state, prevHeight) {\n        isNaN(height) && (state.height = prevHeight);\n      }\n    },\n    viewOffset: {\n      \"default\": [0, 0]\n    },\n    backgroundColor: {\n      \"default\": '#000011'\n    },\n    backgroundImageUrl: {},\n    onBackgroundImageLoaded: {},\n    showNavInfo: {\n      \"default\": true\n    },\n    skyRadius: {\n      \"default\": 50000\n    },\n    objects: {\n      \"default\": []\n    },\n    lights: {\n      \"default\": []\n    },\n    enablePointerInteraction: {\n      \"default\": true,\n      onChange: function onChange(_, state) {\n        // Reset hover state\n        state.hoverObj = null;\n        state.tooltip && state.tooltip.content(null);\n      },\n      triggerUpdate: false\n    },\n    pointerRaycasterThrottleMs: {\n      \"default\": 50,\n      triggerUpdate: false\n    },\n    lineHoverPrecision: {\n      \"default\": 1,\n      triggerUpdate: false\n    },\n    pointsHoverPrecision: {\n      \"default\": 1,\n      triggerUpdate: false\n    },\n    hoverOrderComparator: {\n      triggerUpdate: false\n    },\n    // keep existing order by default\n    hoverFilter: {\n      \"default\": function _default() {\n        return true;\n      },\n      triggerUpdate: false\n    },\n    // exclude objects from interaction\n    tooltipContent: {\n      triggerUpdate: false\n    },\n    hoverDuringDrag: {\n      \"default\": false,\n      triggerUpdate: false\n    },\n    clickAfterDrag: {\n      \"default\": false,\n      triggerUpdate: false\n    },\n    onHover: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onClick: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onRightClick: {\n      triggerUpdate: false\n    }\n  },\n  methods: {\n    tick: function tick(state) {\n      if (state.initialised) {\n        state.controls.enabled && state.controls.update && state.controls.update(Math.min(1, state.clock.getDelta())); // timedelta is required for fly controls\n\n        state.postProcessingComposer ? state.postProcessingComposer.render() // if using postprocessing, switch the output to it\n        : state.renderer.render(state.scene, state.camera);\n        state.extraRenderers.forEach(function (r) {\n          return r.render(state.scene, state.camera);\n        });\n        var now = +new Date();\n        if (state.enablePointerInteraction && now - state.lastRaycasterCheck >= state.pointerRaycasterThrottleMs) {\n          state.lastRaycasterCheck = now;\n          // Update tooltip and trigger onHover events\n          var topObject = null;\n          if (state.hoverDuringDrag || !state.isPointerDragging) {\n            var intersects = this.intersectingObjects(state.pointerPos.x, state.pointerPos.y);\n            state.hoverOrderComparator && intersects.sort(function (a, b) {\n              return state.hoverOrderComparator(a.object, b.object);\n            });\n            var topIntersect = intersects.find(function (d) {\n              return state.hoverFilter(d.object);\n            }) || null;\n            topObject = topIntersect ? topIntersect.object : null;\n            state.intersection = topIntersect || null;\n          }\n          if (topObject !== state.hoverObj) {\n            state.onHover(topObject, state.hoverObj, state.intersection);\n            state.tooltip.content(topObject ? (0,accessor_fn__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(state.tooltipContent)(topObject, state.intersection) || null : null);\n            state.hoverObj = topObject;\n          }\n        }\n        state.tweenGroup.update(); // update camera animation tweens\n      }\n      return this;\n    },\n    getPointerPos: function getPointerPos(state) {\n      var _state$pointerPos = state.pointerPos,\n        x = _state$pointerPos.x,\n        y = _state$pointerPos.y;\n      return {\n        x: x,\n        y: y\n      };\n    },\n    cameraPosition: function cameraPosition(state, position, lookAt, transitionDuration) {\n      var camera = state.camera;\n\n      // Setter\n      if (position && state.initialised) {\n        var finalPos = position;\n        var finalLookAt = lookAt || {\n          x: 0,\n          y: 0,\n          z: 0\n        };\n        if (!transitionDuration) {\n          // no animation\n          setCameraPos(finalPos);\n          setLookAt(finalLookAt);\n        } else {\n          var camPos = Object.assign({}, camera.position);\n          var camLookAt = getLookAt();\n          state.tweenGroup.add(new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_0__.Tween(camPos).to(finalPos, transitionDuration).easing(_tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_0__.Easing.Quadratic.Out).onUpdate(setCameraPos).start());\n\n          // Face direction in 1/3rd of time\n          state.tweenGroup.add(new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_0__.Tween(camLookAt).to(finalLookAt, transitionDuration / 3).easing(_tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_0__.Easing.Quadratic.Out).onUpdate(setLookAt).start());\n        }\n        return this;\n      }\n\n      // Getter\n      return Object.assign({}, camera.position, {\n        lookAt: getLookAt()\n      });\n\n      //\n\n      function setCameraPos(pos) {\n        var x = pos.x,\n          y = pos.y,\n          z = pos.z;\n        if (x !== undefined) camera.position.x = x;\n        if (y !== undefined) camera.position.y = y;\n        if (z !== undefined) camera.position.z = z;\n      }\n      function setLookAt(lookAt) {\n        var lookAtVect = new three.Vector3(lookAt.x, lookAt.y, lookAt.z);\n        if (state.controls.enabled && state.controls.target) {\n          state.controls.target = lookAtVect;\n        } else {\n          // Fly controls doesn't have target attribute\n          camera.lookAt(lookAtVect); // note: lookAt may be overridden by other controls in some cases\n        }\n      }\n      function getLookAt() {\n        return Object.assign(new three.Vector3(0, 0, -1e3).applyQuaternion(camera.quaternion).add(camera.position));\n      }\n    },\n    zoomToFit: function zoomToFit(state) {\n      var transitionDuration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var padding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n      for (var _len = arguments.length, bboxArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n        bboxArgs[_key - 3] = arguments[_key];\n      }\n      return this.fitToBbox(this.getBbox.apply(this, bboxArgs), transitionDuration, padding);\n    },\n    fitToBbox: function fitToBbox(state, bbox) {\n      var transitionDuration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var padding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n      // based on https://discourse.threejs.org/t/camera-zoom-to-fit-object/936/24\n      var camera = state.camera;\n      if (bbox) {\n        var center = new three.Vector3(0, 0, 0); // reset camera aim to center\n        var maxBoxSide = Math.max.apply(Math, _toConsumableArray(Object.entries(bbox).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            coordType = _ref2[0],\n            coords = _ref2[1];\n          return Math.max.apply(Math, _toConsumableArray(coords.map(function (c) {\n            return Math.abs(center[coordType] - c);\n          })));\n        }))) * 2;\n\n        // find distance that fits whole bbox within padded fov\n        var paddedFov = (1 - padding * 2 / state.height) * camera.fov;\n        var fitHeightDistance = maxBoxSide / Math.atan(paddedFov * Math.PI / 180);\n        var fitWidthDistance = fitHeightDistance / camera.aspect;\n        var distance = Math.max(fitHeightDistance, fitWidthDistance);\n        if (distance > 0) {\n          var newCameraPosition = center.clone().sub(camera.position).normalize().multiplyScalar(-distance);\n          this.cameraPosition(newCameraPosition, center, transitionDuration);\n        }\n      }\n      return this;\n    },\n    getBbox: function getBbox(state) {\n      var objFilter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {\n        return true;\n      };\n      var box = new three.Box3(new three.Vector3(0, 0, 0), new three.Vector3(0, 0, 0));\n      var objs = state.objects.filter(objFilter);\n      if (!objs.length) return null;\n      objs.forEach(function (obj) {\n        return box.expandByObject(obj);\n      });\n\n      // extract global x,y,z min/max\n      return Object.assign.apply(Object, _toConsumableArray(['x', 'y', 'z'].map(function (c) {\n        return _defineProperty({}, c, [box.min[c], box.max[c]]);\n      })));\n    },\n    getScreenCoords: function getScreenCoords(state, x, y, z) {\n      var vec = new three.Vector3(x, y, z);\n      vec.project(this.camera()); // project to the camera plane\n      return {\n        // align relative pos to canvas dimensions\n        x: (vec.x + 1) * state.width / 2,\n        y: -(vec.y - 1) * state.height / 2\n      };\n    },\n    getSceneCoords: function getSceneCoords(state, screenX, screenY) {\n      var distance = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n      var relCoords = new three.Vector2(screenX / state.width * 2 - 1, -(screenY / state.height) * 2 + 1);\n      var raycaster = new three.Raycaster();\n      raycaster.setFromCamera(relCoords, state.camera);\n      return Object.assign({}, raycaster.ray.at(distance, new three.Vector3()));\n    },\n    intersectingObjects: function intersectingObjects(state, x, y) {\n      var relCoords = new three.Vector2(x / state.width * 2 - 1, -(y / state.height) * 2 + 1);\n      var raycaster = new three.Raycaster();\n      raycaster.params.Line.threshold = state.lineHoverPrecision; // set linePrecision\n      raycaster.params.Points.threshold = state.pointsHoverPrecision; // set pointsPrecision\n      raycaster.setFromCamera(relCoords, state.camera);\n      return raycaster.intersectObjects(state.objects, true);\n    },\n    renderer: function renderer(state) {\n      return state.renderer;\n    },\n    scene: function scene(state) {\n      return state.scene;\n    },\n    camera: function camera(state) {\n      return state.camera;\n    },\n    postProcessingComposer: function postProcessingComposer(state) {\n      return state.postProcessingComposer;\n    },\n    controls: function controls(state) {\n      return state.controls;\n    },\n    tbControls: function tbControls(state) {\n      return state.controls;\n    } // to be deprecated\n  },\n  stateInit: function stateInit() {\n    return {\n      scene: new three.Scene(),\n      camera: new three.PerspectiveCamera(),\n      clock: new three.Clock(),\n      tweenGroup: new _tweenjs_tween_js__WEBPACK_IMPORTED_MODULE_0__.Group(),\n      lastRaycasterCheck: 0\n    };\n  },\n  init: function init(domNode, state) {\n    var _ref4 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref4$controlType = _ref4.controlType,\n      controlType = _ref4$controlType === void 0 ? 'trackball' : _ref4$controlType,\n      _ref4$useWebGPU = _ref4.useWebGPU,\n      useWebGPU = _ref4$useWebGPU === void 0 ? false : _ref4$useWebGPU,\n      _ref4$rendererConfig = _ref4.rendererConfig,\n      rendererConfig = _ref4$rendererConfig === void 0 ? {} : _ref4$rendererConfig,\n      _ref4$extraRenderers = _ref4.extraRenderers,\n      extraRenderers = _ref4$extraRenderers === void 0 ? [] : _ref4$extraRenderers,\n      _ref4$waitForLoadComp = _ref4.waitForLoadComplete,\n      waitForLoadComplete = _ref4$waitForLoadComp === void 0 ? true : _ref4$waitForLoadComp;\n    // Wipe DOM\n    domNode.innerHTML = '';\n\n    // Add relative container\n    domNode.appendChild(state.container = document.createElement('div'));\n    state.container.className = 'scene-container';\n    state.container.style.position = 'relative';\n\n    // Add nav info section\n    state.container.appendChild(state.navInfo = document.createElement('div'));\n    state.navInfo.className = 'scene-nav-info';\n    state.navInfo.textContent = {\n      orbit: 'Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan',\n      trackball: 'Left-click: rotate, Mouse-wheel/middle-click: zoom, Right-click: pan',\n      fly: 'WASD: move, R|F: up | down, Q|E: roll, up|down: pitch, left|right: yaw'\n    }[controlType] || '';\n    state.navInfo.style.display = state.showNavInfo ? null : 'none';\n\n    // Setup tooltip\n    state.tooltip = new float_tooltip__WEBPACK_IMPORTED_MODULE_2__[\"default\"](state.container);\n\n    // Capture pointer coords on move or touchstart\n    state.pointerPos = new three.Vector2();\n    state.pointerPos.x = -2; // Initialize off canvas\n    state.pointerPos.y = -2;\n    ['pointermove', 'pointerdown'].forEach(function (evType) {\n      return state.container.addEventListener(evType, function (ev) {\n        // track click state\n        evType === 'pointerdown' && (state.isPointerPressed = true);\n\n        // detect point drag\n        !state.isPointerDragging && ev.type === 'pointermove' && (ev.pressure > 0 || state.isPointerPressed) // ev.pressure always 0 on Safari, so we used the isPointerPressed tracker\n        && (ev.pointerType === 'mouse' || ev.movementX === undefined || [ev.movementX, ev.movementY].some(function (m) {\n          return Math.abs(m) > 1;\n        })) // relax drag trigger sensitivity on non-mouse (touch/pen) events\n        && (state.isPointerDragging = true);\n        if (state.enablePointerInteraction) {\n          // update the pointer pos\n          var offset = getOffset(state.container);\n          state.pointerPos.x = ev.pageX - offset.left;\n          state.pointerPos.y = ev.pageY - offset.top;\n        }\n        function getOffset(el) {\n          var rect = el.getBoundingClientRect(),\n            scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n            scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n          return {\n            top: rect.top + scrollTop,\n            left: rect.left + scrollLeft\n          };\n        }\n      }, {\n        passive: true\n      });\n    });\n\n    // Handle click events on objs\n    state.container.addEventListener('pointerup', function (ev) {\n      if (!state.isPointerPressed) return; // don't trigger click events if pointer is not pressed on the canvas\n\n      state.isPointerPressed = false;\n      if (state.isPointerDragging) {\n        state.isPointerDragging = false;\n        if (!state.clickAfterDrag) return; // don't trigger onClick after pointer drag (camera motion via controls)\n      }\n      requestAnimationFrame(function () {\n        // trigger click events asynchronously, to allow hoverObj to be set (on frame)\n        if (ev.button === 0) {\n          // left-click\n          state.onClick(state.hoverObj || null, ev, state.intersection); // trigger background clicks with null\n        }\n        if (ev.button === 2 && state.onRightClick) {\n          // right-click\n          state.onRightClick(state.hoverObj || null, ev, state.intersection);\n        }\n      });\n    }, {\n      passive: true,\n      capture: true\n    }); // use capture phase to prevent propagation blocking from controls (specifically for fly)\n\n    state.container.addEventListener('contextmenu', function (ev) {\n      if (state.onRightClick) ev.preventDefault(); // prevent default contextmenu behavior and allow pointerup to fire instead\n    });\n\n    // Setup renderer, camera and controls\n    state.renderer = new (useWebGPU ? three_webgpu__WEBPACK_IMPORTED_MODULE_6__.WebGPURenderer : three.WebGLRenderer)(Object.assign({\n      antialias: true,\n      alpha: true\n    }, rendererConfig));\n    state.renderer.setPixelRatio(Math.min(2, window.devicePixelRatio)); // clamp device pixel ratio\n    state.container.appendChild(state.renderer.domElement);\n\n    // Setup extra renderers\n    state.extraRenderers = extraRenderers;\n    state.extraRenderers.forEach(function (r) {\n      // overlay them on top of main renderer\n      r.domElement.style.position = 'absolute';\n      r.domElement.style.top = '0px';\n      r.domElement.style.pointerEvents = 'none';\n      state.container.appendChild(r.domElement);\n    });\n\n    // configure post-processing composer\n    state.postProcessingComposer = new three_examples_jsm_postprocessing_EffectComposer_js__WEBPACK_IMPORTED_MODULE_7__.EffectComposer(state.renderer);\n    state.postProcessingComposer.addPass(new three_examples_jsm_postprocessing_RenderPass_js__WEBPACK_IMPORTED_MODULE_8__.RenderPass(state.scene, state.camera)); // render scene as first pass\n\n    // configure controls\n    state.controls = new {\n      trackball: three_examples_jsm_controls_TrackballControls_js__WEBPACK_IMPORTED_MODULE_9__.TrackballControls,\n      orbit: three_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_10__.OrbitControls,\n      fly: three_examples_jsm_controls_FlyControls_js__WEBPACK_IMPORTED_MODULE_11__.FlyControls\n    }[controlType](state.camera, state.renderer.domElement);\n    if (controlType === 'fly') {\n      state.controls.movementSpeed = 300;\n      state.controls.rollSpeed = Math.PI / 6;\n      state.controls.dragToLook = true;\n    }\n    if (controlType === 'trackball' || controlType === 'orbit') {\n      state.controls.minDistance = 0.1;\n      state.controls.maxDistance = state.skyRadius;\n      state.controls.addEventListener('start', function () {\n        state.controlsEngaged = true;\n      });\n      state.controls.addEventListener('change', function () {\n        if (state.controlsEngaged) {\n          state.controlsDragging = true;\n        }\n      });\n      state.controls.addEventListener('end', function () {\n        state.controlsEngaged = false;\n        state.controlsDragging = false;\n      });\n    }\n    [state.renderer, state.postProcessingComposer].concat(_toConsumableArray(state.extraRenderers)).forEach(function (r) {\n      return r.setSize(state.width, state.height);\n    });\n    state.camera.aspect = state.width / state.height;\n    state.camera.updateProjectionMatrix();\n    state.camera.position.z = 1000;\n\n    // add sky\n    state.scene.add(state.skysphere = new three.Mesh());\n    state.skysphere.visible = false;\n    state.loadComplete = state.scene.visible = !waitForLoadComplete;\n    window.scene = state.scene;\n  },\n  update: function update(state, changedProps) {\n    // resize canvas\n    if (state.width && state.height && (changedProps.hasOwnProperty('width') || changedProps.hasOwnProperty('height'))) {\n      var _state$camera;\n      var w = state.width;\n      var h = state.height;\n      state.container.style.width = \"\".concat(w, \"px\");\n      state.container.style.height = \"\".concat(h, \"px\");\n      [state.renderer, state.postProcessingComposer].concat(_toConsumableArray(state.extraRenderers)).forEach(function (r) {\n        return r.setSize(w, h);\n      });\n      state.camera.aspect = w / h;\n      var o = state.viewOffset.slice(0, 2);\n      o.some(function (n) {\n        return n;\n      }) && (_state$camera = state.camera).setViewOffset.apply(_state$camera, [w, h].concat(_toConsumableArray(o), [w, h]));\n      state.camera.updateProjectionMatrix();\n    }\n    if (changedProps.hasOwnProperty('viewOffset')) {\n      var _state$camera2;\n      var _w = state.width;\n      var _h = state.height;\n      var _o = state.viewOffset.slice(0, 2);\n      _o.some(function (n) {\n        return n;\n      }) ? (_state$camera2 = state.camera).setViewOffset.apply(_state$camera2, [_w, _h].concat(_toConsumableArray(_o), [_w, _h])) : state.camera.clearViewOffset();\n    }\n    if (changedProps.hasOwnProperty('skyRadius') && state.skyRadius) {\n      state.controls.hasOwnProperty('maxDistance') && changedProps.skyRadius && (state.controls.maxDistance = Math.min(state.controls.maxDistance, state.skyRadius));\n      state.camera.far = state.skyRadius * 2.5;\n      state.camera.updateProjectionMatrix();\n      state.skysphere.geometry = new three.SphereGeometry(state.skyRadius);\n    }\n    if (changedProps.hasOwnProperty('backgroundColor')) {\n      var alpha = (0,polished__WEBPACK_IMPORTED_MODULE_12__.parseToRgb)(state.backgroundColor).alpha;\n      if (alpha === undefined) alpha = 1;\n      state.renderer.setClearColor(new three.Color((0,polished__WEBPACK_IMPORTED_MODULE_12__.opacify)(1, state.backgroundColor)), alpha);\n    }\n    if (changedProps.hasOwnProperty('backgroundImageUrl')) {\n      if (!state.backgroundImageUrl) {\n        state.skysphere.visible = false;\n        state.skysphere.material.map = null;\n        !state.loadComplete && finishLoad();\n      } else {\n        new three.TextureLoader().load(state.backgroundImageUrl, function (texture) {\n          texture.colorSpace = three.SRGBColorSpace;\n          state.skysphere.material = new three.MeshBasicMaterial({\n            map: texture,\n            side: three.BackSide\n          });\n          state.skysphere.visible = true;\n\n          // triggered when background image finishes loading (asynchronously to allow 1 frame to load texture)\n          state.onBackgroundImageLoaded && setTimeout(state.onBackgroundImageLoaded);\n          !state.loadComplete && finishLoad();\n        });\n      }\n    }\n    changedProps.hasOwnProperty('showNavInfo') && (state.navInfo.style.display = state.showNavInfo ? null : 'none');\n    if (changedProps.hasOwnProperty('lights')) {\n      (changedProps.lights || []).forEach(function (light) {\n        return state.scene.remove(light);\n      }); // Clear the place\n      state.lights.forEach(function (light) {\n        return state.scene.add(light);\n      }); // Add to scene\n    }\n    if (changedProps.hasOwnProperty('objects')) {\n      (changedProps.objects || []).forEach(function (obj) {\n        return state.scene.remove(obj);\n      }); // Clear the place\n      state.objects.forEach(function (obj) {\n        return state.scene.add(obj);\n      }); // Add to scene\n    }\n\n    //\n\n    function finishLoad() {\n      state.loadComplete = state.scene.visible = true;\n    }\n  }\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/three-render-objects/dist/three-render-objects.mjs\n");

/***/ })

};
;