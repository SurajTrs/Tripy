"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/d3-geo-voronoi";
exports.ids = ["vendor-chunks/d3-geo-voronoi"];
exports.modules = {

/***/ "(ssr)/./node_modules/d3-geo-voronoi/src/cartesian.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-voronoi/src/cartesian.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cartesian: () => (/* binding */ cartesian),\n/* harmony export */   cartesianAdd: () => (/* binding */ cartesianAdd),\n/* harmony export */   cartesianAddInPlace: () => (/* binding */ cartesianAddInPlace),\n/* harmony export */   cartesianCross: () => (/* binding */ cartesianCross),\n/* harmony export */   cartesianDot: () => (/* binding */ cartesianDot),\n/* harmony export */   cartesianNormalize: () => (/* binding */ cartesianNormalize),\n/* harmony export */   cartesianNormalizeInPlace: () => (/* binding */ cartesianNormalizeInPlace),\n/* harmony export */   cartesianScale: () => (/* binding */ cartesianScale),\n/* harmony export */   spherical: () => (/* binding */ spherical)\n/* harmony export */ });\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/d3-geo-voronoi/src/math.js\");\n\n\nfunction spherical(cartesian) {\n  return [(0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(cartesian[1], cartesian[0]), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  const lambda = spherical[0],\n    phi = spherical[1],\n    cosPhi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi);\n  return [cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda), cosPhi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0],\n  ];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  (a[0] += b[0]), (a[1] += b[1]), (a[2] += b[2]);\n}\n\nfunction cartesianAdd(a, b) {\n  return [a[0] + b[0], a[1] + b[1], a[2] + b[2]];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  (d[0] /= l), (d[1] /= l), (d[2] /= l);\n}\n\nfunction cartesianNormalize(d) {\n  var l = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  return [d[0] / l, d[1] / l, d[2] / l];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZDMtZ2VvLXZvcm9ub2kvc3JjL2NhcnRlc2lhbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQXdEOztBQUVqRDtBQUNQLFVBQVUsK0NBQUssOEJBQThCLDhDQUFJO0FBQ2pEOztBQUVPO0FBQ1A7QUFDQTtBQUNBLGFBQWEsNkNBQUc7QUFDaEIsbUJBQW1CLDZDQUFHLG1CQUFtQiw2Q0FBRyxVQUFVLDZDQUFHO0FBQ3pEOztBQUVPO0FBQ1A7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNPO0FBQ1A7QUFDQTs7QUFFTztBQUNQO0FBQ0E7O0FBRU87QUFDUDtBQUNBOztBQUVBO0FBQ087QUFDUCxVQUFVLDhDQUFJO0FBQ2Q7QUFDQTs7QUFFTztBQUNQLFVBQVUsOENBQUk7QUFDZDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvc3VyYWpyYXdhdC9Eb3dubG9hZHMvVHJpcHkvbm9kZV9tb2R1bGVzL2QzLWdlby12b3Jvbm9pL3NyYy9jYXJ0ZXNpYW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXNpbiwgYXRhbjIsIGNvcywgc2luLCBzcXJ0IH0gZnJvbSBcIi4vbWF0aC5qc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gc3BoZXJpY2FsKGNhcnRlc2lhbikge1xuICByZXR1cm4gW2F0YW4yKGNhcnRlc2lhblsxXSwgY2FydGVzaWFuWzBdKSwgYXNpbihjYXJ0ZXNpYW5bMl0pXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbihzcGhlcmljYWwpIHtcbiAgY29uc3QgbGFtYmRhID0gc3BoZXJpY2FsWzBdLFxuICAgIHBoaSA9IHNwaGVyaWNhbFsxXSxcbiAgICBjb3NQaGkgPSBjb3MocGhpKTtcbiAgcmV0dXJuIFtjb3NQaGkgKiBjb3MobGFtYmRhKSwgY29zUGhpICogc2luKGxhbWJkYSksIHNpbihwaGkpXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbkRvdChhLCBiKSB7XG4gIHJldHVybiBhWzBdICogYlswXSArIGFbMV0gKiBiWzFdICsgYVsyXSAqIGJbMl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5Dcm9zcyhhLCBiKSB7XG4gIHJldHVybiBbXG4gICAgYVsxXSAqIGJbMl0gLSBhWzJdICogYlsxXSxcbiAgICBhWzJdICogYlswXSAtIGFbMF0gKiBiWzJdLFxuICAgIGFbMF0gKiBiWzFdIC0gYVsxXSAqIGJbMF0sXG4gIF07XG59XG5cbi8vIFRPRE8gcmV0dXJuIGFcbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5BZGRJblBsYWNlKGEsIGIpIHtcbiAgKGFbMF0gKz0gYlswXSksIChhWzFdICs9IGJbMV0pLCAoYVsyXSArPSBiWzJdKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbkFkZChhLCBiKSB7XG4gIHJldHVybiBbYVswXSArIGJbMF0sIGFbMV0gKyBiWzFdLCBhWzJdICsgYlsyXV07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjYXJ0ZXNpYW5TY2FsZSh2ZWN0b3IsIGspIHtcbiAgcmV0dXJuIFt2ZWN0b3JbMF0gKiBrLCB2ZWN0b3JbMV0gKiBrLCB2ZWN0b3JbMl0gKiBrXTtcbn1cblxuLy8gVE9ETyByZXR1cm4gZFxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbk5vcm1hbGl6ZUluUGxhY2UoZCkge1xuICB2YXIgbCA9IHNxcnQoZFswXSAqIGRbMF0gKyBkWzFdICogZFsxXSArIGRbMl0gKiBkWzJdKTtcbiAgKGRbMF0gLz0gbCksIChkWzFdIC89IGwpLCAoZFsyXSAvPSBsKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNhcnRlc2lhbk5vcm1hbGl6ZShkKSB7XG4gIHZhciBsID0gc3FydChkWzBdICogZFswXSArIGRbMV0gKiBkWzFdICsgZFsyXSAqIGRbMl0pO1xuICByZXR1cm4gW2RbMF0gLyBsLCBkWzFdIC8gbCwgZFsyXSAvIGxdO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-geo-voronoi/src/cartesian.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/d3-geo-voronoi/src/delaunay.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-voronoi/src/delaunay.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   excess: () => (/* binding */ excess),\n/* harmony export */   geoDelaunay: () => (/* binding */ geoDelaunay)\n/* harmony export */ });\n/* harmony import */ var d3_delaunay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-delaunay */ \"(ssr)/./node_modules/d3-delaunay/src/delaunay.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/rotation.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/projection/stereographic.js\");\n/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-array */ \"(ssr)/./node_modules/d3-array/src/extent.js\");\n/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ \"(ssr)/./node_modules/d3-geo-voronoi/src/math.js\");\n/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartesian.js */ \"(ssr)/./node_modules/d3-geo-voronoi/src/cartesian.js\");\n\n\n\n\n\n\n// Converts 3D Cartesian to spherical coordinates (degrees).\nfunction spherical(cartesian) {\n  return [\n    (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.atan2)(cartesian[1], cartesian[0]) * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees,\n    (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.asin)((0,_math_js__WEBPACK_IMPORTED_MODULE_0__.max)(-1, (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.min)(1, cartesian[2]))) * _math_js__WEBPACK_IMPORTED_MODULE_0__.degrees,\n  ];\n}\n\n// Converts spherical coordinates (degrees) to 3D Cartesian.\nfunction cartesian(coordinates) {\n  const lambda = coordinates[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,\n    phi = coordinates[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__.radians,\n    cosphi = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(phi);\n  return [cosphi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.cos)(lambda), cosphi * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(lambda), (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sin)(phi)];\n}\n\n// Spherical excess of a triangle (in spherical coordinates)\nfunction excess(triangle) {\n  triangle = triangle.map((p) => cartesian(p));\n  return (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianDot)(triangle[0], (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(triangle[2], triangle[1]));\n}\n\nfunction geoDelaunay(points) {\n  const delaunay = geo_delaunay_from(points),\n    triangles = geo_triangles(delaunay),\n    edges = geo_edges(triangles, points),\n    neighbors = geo_neighbors(triangles, points.length),\n    find = geo_find(neighbors, points),\n    // Voronoi ; could take a center function as an argument\n    circumcenters = geo_circumcenters(triangles, points),\n    { polygons, centers } = geo_polygons(circumcenters, triangles, points),\n    mesh = geo_mesh(polygons),\n    hull = geo_hull(triangles, points),\n    // Urquhart ; returns a function that takes a distance array as argument.\n    urquhart = geo_urquhart(edges, triangles);\n  return {\n    delaunay,\n    edges,\n    triangles,\n    centers,\n    neighbors,\n    polygons,\n    mesh,\n    hull,\n    urquhart,\n    find,\n  };\n}\n\nfunction geo_find(neighbors, points) {\n  function distance2(a, b) {\n    let x = a[0] - b[0],\n      y = a[1] - b[1],\n      z = a[2] - b[2];\n    return x * x + y * y + z * z;\n  }\n\n  return function find(x, y, next) {\n    if (next === undefined) next = 0;\n    let cell,\n      dist,\n      found = next;\n    const xyz = cartesian([x, y]);\n    do {\n      cell = next;\n      next = null;\n      dist = distance2(xyz, cartesian(points[cell]));\n      neighbors[cell].forEach((i) => {\n        let ndist = distance2(xyz, cartesian(points[i]));\n        if (ndist < dist) {\n          dist = ndist;\n          next = i;\n          found = i;\n          return;\n        }\n      });\n    } while (next !== null);\n\n    return found;\n  };\n}\n\nfunction geo_delaunay_from(points) {\n  if (points.length < 2) return {};\n\n  // find a valid point to send to infinity\n  let pivot = 0;\n  while (isNaN(points[pivot][0] + points[pivot][1]) && pivot++ < points.length);\n\n  const r = (0,d3_geo__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(points[pivot]),\n    projection = (0,d3_geo__WEBPACK_IMPORTED_MODULE_3__[\"default\"])()\n      .translate([0, 0])\n      .scale(1)\n      .rotate(r.invert([180, 0]));\n  points = points.map(projection);\n\n  const zeros = [];\n  let max2 = 1;\n  for (let i = 0, n = points.length; i < n; i++) {\n    let m = points[i][0] ** 2 + points[i][1] ** 2;\n    if (!isFinite(m) || m > 1e32) zeros.push(i);\n    else if (m > max2) max2 = m;\n  }\n\n  const FAR = 1e6 * (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sqrt)(max2);\n\n  zeros.forEach((i) => (points[i] = [FAR, 0]));\n\n  // Add infinite horizon points\n  points.push([0, FAR]);\n  points.push([-FAR, 0]);\n  points.push([0, -FAR]);\n\n  const delaunay = d3_delaunay__WEBPACK_IMPORTED_MODULE_4__[\"default\"].from(points);\n\n  delaunay.projection = projection;\n\n  // clean up the triangulation\n  const { triangles, halfedges, inedges } = delaunay;\n  const degenerate = [];\n  for (let i = 0, l = halfedges.length; i < l; i++) {\n    if (halfedges[i] < 0) {\n      const j = i % 3 == 2 ? i - 2 : i + 1;\n      const k = i % 3 == 0 ? i + 2 : i - 1;\n      const a = halfedges[j];\n      const b = halfedges[k];\n      halfedges[a] = b;\n      halfedges[b] = a;\n      halfedges[j] = halfedges[k] = -1;\n      triangles[i] = triangles[j] = triangles[k] = pivot;\n      inedges[triangles[a]] = a % 3 == 0 ? a + 2 : a - 1;\n      inedges[triangles[b]] = b % 3 == 0 ? b + 2 : b - 1;\n      degenerate.push(Math.min(i, j, k));\n      i += 2 - (i % 3);\n    } else if (triangles[i] > points.length - 3 - 1) {\n      triangles[i] = pivot;\n    }\n  }\n\n  // there should always be 4 degenerate triangles\n  // console.warn(degenerate);\n  return delaunay;\n}\n\nfunction geo_edges(triangles, points) {\n  const _index = new Set();\n  if (points.length === 2) return [[0, 1]];\n  triangles.forEach((tri) => {\n    if (tri[0] === tri[1]) return;\n    if (excess(tri.map((i) => points[i])) < 0) return;\n    for (let i = 0, j; i < 3; i++) {\n      j = (i + 1) % 3;\n      _index.add((0,d3_array__WEBPACK_IMPORTED_MODULE_5__[\"default\"])([tri[i], tri[j]]).join(\"-\"));\n    }\n  });\n  return Array.from(_index, (d) => d.split(\"-\").map(Number));\n}\n\nfunction geo_triangles(delaunay) {\n  const { triangles } = delaunay;\n  if (!triangles) return [];\n\n  const geo_triangles = [];\n  for (let i = 0, n = triangles.length / 3; i < n; i++) {\n    const a = triangles[3 * i],\n      b = triangles[3 * i + 1],\n      c = triangles[3 * i + 2];\n    if (a !== b && b !== c) {\n      geo_triangles.push([a, c, b]);\n    }\n  }\n  return geo_triangles;\n}\n\nfunction geo_circumcenters(triangles, points) {\n  // if (!use_centroids) {\n  return triangles.map((tri) => {\n    const c = tri.map((i) => points[i]).map(cartesian),\n      V = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianAdd)(\n        (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianAdd)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(c[1], c[0]), (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(c[2], c[1])),\n        (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(c[0], c[2])\n      );\n    return spherical((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianNormalize)(V));\n  });\n  /*} else {\n    return triangles.map(tri => {\n      return d3.geoCentroid({\n        type: \"MultiPoint\",\n        coordinates: tri.map(i => points[i])\n      });\n    });\n  }*/\n}\n\nfunction geo_neighbors(triangles, npoints) {\n  const neighbors = [];\n  triangles.forEach((tri) => {\n    for (let j = 0; j < 3; j++) {\n      const a = tri[j],\n        b = tri[(j + 1) % 3];\n      neighbors[a] = neighbors[a] || [];\n      neighbors[a].push(b);\n    }\n  });\n\n  // degenerate cases\n  if (triangles.length === 0) {\n    if (npoints === 2) (neighbors[0] = [1]), (neighbors[1] = [0]);\n    else if (npoints === 1) neighbors[0] = [];\n  }\n\n  return neighbors;\n}\n\nfunction geo_polygons(circumcenters, triangles, points) {\n  const polygons = [];\n\n  const centers = circumcenters.slice();\n\n  if (triangles.length === 0) {\n    if (points.length < 2) return { polygons, centers };\n    if (points.length === 2) {\n      // two hemispheres\n      const a = cartesian(points[0]),\n        b = cartesian(points[1]),\n        m = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianNormalize)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianAdd)(a, b)),\n        d = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianNormalize)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(a, b)),\n        c = (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(m, d);\n      const poly = [\n        m,\n        (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(m, c),\n        (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(m, c), c),\n        (0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(m, c), c), c),\n      ]\n        .map(spherical)\n        .map(supplement);\n      return (\n        polygons.push(poly),\n        polygons.push(poly.slice().reverse()),\n        { polygons, centers }\n      );\n    }\n  }\n\n  triangles.forEach((tri, t) => {\n    for (let j = 0; j < 3; j++) {\n      const a = tri[j],\n        b = tri[(j + 1) % 3],\n        c = tri[(j + 2) % 3];\n      polygons[a] = polygons[a] || [];\n      polygons[a].push([b, c, t, [a, b, c]]);\n    }\n  });\n\n  // reorder each polygon\n  const reordered = polygons.map((poly) => {\n    const p = [poly[0][2]]; // t\n    let k = poly[0][1]; // k = c\n    for (let i = 1; i < poly.length; i++) {\n      // look for b = k\n      for (let j = 0; j < poly.length; j++) {\n        if (poly[j][0] == k) {\n          k = poly[j][1];\n          p.push(poly[j][2]);\n          break;\n        }\n      }\n    }\n\n    if (p.length > 2) {\n      return p;\n    } else if (p.length == 2) {\n      const R0 = o_midpoint(\n          points[poly[0][3][0]],\n          points[poly[0][3][1]],\n          centers[p[0]]\n        ),\n        R1 = o_midpoint(\n          points[poly[0][3][2]],\n          points[poly[0][3][0]],\n          centers[p[0]]\n        );\n      const i0 = supplement(R0),\n        i1 = supplement(R1);\n      return [p[0], i1, p[1], i0];\n    }\n  });\n\n  function supplement(point) {\n    let f = -1;\n    centers.slice(triangles.length, Infinity).forEach((p, i) => {\n      if (p[0] === point[0] && p[1] === point[1]) f = i + triangles.length;\n    });\n    if (f < 0) (f = centers.length), centers.push(point);\n    return f;\n  }\n\n  return { polygons: reordered, centers };\n}\n\nfunction o_midpoint(a, b, c) {\n  a = cartesian(a);\n  b = cartesian(b);\n  c = cartesian(c);\n  const s = (0,_math_js__WEBPACK_IMPORTED_MODULE_0__.sign)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianDot)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianCross)(b, a), c));\n  return spherical((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianNormalize)((0,_cartesian_js__WEBPACK_IMPORTED_MODULE_1__.cartesianAdd)(a, b)).map((d) => s * d));\n}\n\nfunction geo_mesh(polygons) {\n  const mesh = [];\n  polygons.forEach((poly) => {\n    if (!poly) return;\n    let p = poly[poly.length - 1];\n    for (let q of poly) {\n      if (q > p) mesh.push([p, q]);\n      p = q;\n    }\n  });\n  return mesh;\n}\n\nfunction geo_urquhart(edges, triangles) {\n  return function (distances) {\n    const _lengths = new Map(),\n      _urquhart = new Map();\n    edges.forEach((edge, i) => {\n      const u = edge.join(\"-\");\n      _lengths.set(u, distances[i]);\n      _urquhart.set(u, true);\n    });\n\n    triangles.forEach((tri) => {\n      let l = 0,\n        remove = -1;\n      for (let j = 0; j < 3; j++) {\n        let u = (0,d3_array__WEBPACK_IMPORTED_MODULE_5__[\"default\"])([tri[j], tri[(j + 1) % 3]]).join(\"-\");\n        if (_lengths.get(u) > l) {\n          l = _lengths.get(u);\n          remove = u;\n        }\n      }\n      _urquhart.set(remove, false);\n    });\n\n    return edges.map((edge) => _urquhart.get(edge.join(\"-\")));\n  };\n}\n\nfunction geo_hull(triangles, points) {\n  const _hull = new Set(),\n    hull = [];\n  triangles.map((tri) => {\n    if (excess(tri.map((i) => points[i > points.length ? 0 : i])) > 1e-12)\n      return;\n    for (let i = 0; i < 3; i++) {\n      let e = [tri[i], tri[(i + 1) % 3]],\n        code = `${e[0]}-${e[1]}`;\n      if (_hull.has(code)) _hull.delete(code);\n      else _hull.add(`${e[1]}-${e[0]}`);\n    }\n  });\n\n  const _index = new Map();\n  let start;\n  _hull.forEach((e) => {\n    e = e.split(\"-\").map(Number);\n    _index.set(e[0], e[1]);\n    start = e[0];\n  });\n\n  if (start === undefined) return hull;\n\n  let next = start;\n  do {\n    hull.push(next);\n    let n = _index.get(next);\n    _index.set(next, -1);\n    next = n;\n  } while (next > -1 && next !== start);\n\n  return hull;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-geo-voronoi/src/delaunay.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/d3-geo-voronoi/src/math.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo-voronoi/src/math.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   abs: () => (/* binding */ abs),\n/* harmony export */   acos: () => (/* binding */ acos),\n/* harmony export */   asin: () => (/* binding */ asin),\n/* harmony export */   atan: () => (/* binding */ atan),\n/* harmony export */   atan2: () => (/* binding */ atan2),\n/* harmony export */   ceil: () => (/* binding */ ceil),\n/* harmony export */   cos: () => (/* binding */ cos),\n/* harmony export */   degrees: () => (/* binding */ degrees),\n/* harmony export */   epsilon: () => (/* binding */ epsilon),\n/* harmony export */   epsilon2: () => (/* binding */ epsilon2),\n/* harmony export */   exp: () => (/* binding */ exp),\n/* harmony export */   floor: () => (/* binding */ floor),\n/* harmony export */   halfPi: () => (/* binding */ halfPi),\n/* harmony export */   haversin: () => (/* binding */ haversin),\n/* harmony export */   log: () => (/* binding */ log),\n/* harmony export */   max: () => (/* binding */ max),\n/* harmony export */   min: () => (/* binding */ min),\n/* harmony export */   pi: () => (/* binding */ pi),\n/* harmony export */   pow: () => (/* binding */ pow),\n/* harmony export */   quarterPi: () => (/* binding */ quarterPi),\n/* harmony export */   radians: () => (/* binding */ radians),\n/* harmony export */   sign: () => (/* binding */ sign),\n/* harmony export */   sin: () => (/* binding */ sin),\n/* harmony export */   sqrt: () => (/* binding */ sqrt),\n/* harmony export */   tan: () => (/* binding */ tan),\n/* harmony export */   tau: () => (/* binding */ tau)\n/* harmony export */ });\nconst epsilon = 1e-6;\nconst epsilon2 = 1e-12;\nconst pi = Math.PI;\nconst halfPi = pi / 2;\nconst quarterPi = pi / 4;\nconst tau = pi * 2;\n\nconst degrees = 180 / pi;\nconst radians = pi / 180;\n\nconst abs = Math.abs;\nconst atan = Math.atan;\nconst atan2 = Math.atan2;\nconst cos = Math.cos;\nconst ceil = Math.ceil;\nconst exp = Math.exp;\nconst floor = Math.floor;\nconst log = Math.log;\nconst max = Math.max;\nconst min = Math.min;\nconst pow = Math.pow;\nconst sin = Math.sin;\nconst sign =\n  Math.sign ||\n  function (x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  };\nconst sqrt = Math.sqrt;\nconst tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvZDMtZ2VvLXZvcm9ub2kvc3JjL21hdGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDQTs7QUFFQTtBQUNQO0FBQ0E7O0FBRU87QUFDUDtBQUNBOztBQUVPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3N1cmFqcmF3YXQvRG93bmxvYWRzL1RyaXB5L25vZGVfbW9kdWxlcy9kMy1nZW8tdm9yb25vaS9zcmMvbWF0aC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZXBzaWxvbiA9IDFlLTY7XG5leHBvcnQgY29uc3QgZXBzaWxvbjIgPSAxZS0xMjtcbmV4cG9ydCBjb25zdCBwaSA9IE1hdGguUEk7XG5leHBvcnQgY29uc3QgaGFsZlBpID0gcGkgLyAyO1xuZXhwb3J0IGNvbnN0IHF1YXJ0ZXJQaSA9IHBpIC8gNDtcbmV4cG9ydCBjb25zdCB0YXUgPSBwaSAqIDI7XG5cbmV4cG9ydCBjb25zdCBkZWdyZWVzID0gMTgwIC8gcGk7XG5leHBvcnQgY29uc3QgcmFkaWFucyA9IHBpIC8gMTgwO1xuXG5leHBvcnQgY29uc3QgYWJzID0gTWF0aC5hYnM7XG5leHBvcnQgY29uc3QgYXRhbiA9IE1hdGguYXRhbjtcbmV4cG9ydCBjb25zdCBhdGFuMiA9IE1hdGguYXRhbjI7XG5leHBvcnQgY29uc3QgY29zID0gTWF0aC5jb3M7XG5leHBvcnQgY29uc3QgY2VpbCA9IE1hdGguY2VpbDtcbmV4cG9ydCBjb25zdCBleHAgPSBNYXRoLmV4cDtcbmV4cG9ydCBjb25zdCBmbG9vciA9IE1hdGguZmxvb3I7XG5leHBvcnQgY29uc3QgbG9nID0gTWF0aC5sb2c7XG5leHBvcnQgY29uc3QgbWF4ID0gTWF0aC5tYXg7XG5leHBvcnQgY29uc3QgbWluID0gTWF0aC5taW47XG5leHBvcnQgY29uc3QgcG93ID0gTWF0aC5wb3c7XG5leHBvcnQgY29uc3Qgc2luID0gTWF0aC5zaW47XG5leHBvcnQgY29uc3Qgc2lnbiA9XG4gIE1hdGguc2lnbiB8fFxuICBmdW5jdGlvbiAoeCkge1xuICAgIHJldHVybiB4ID4gMCA/IDEgOiB4IDwgMCA/IC0xIDogMDtcbiAgfTtcbmV4cG9ydCBjb25zdCBzcXJ0ID0gTWF0aC5zcXJ0O1xuZXhwb3J0IGNvbnN0IHRhbiA9IE1hdGgudGFuO1xuXG5leHBvcnQgZnVuY3Rpb24gYWNvcyh4KSB7XG4gIHJldHVybiB4ID4gMSA/IDAgOiB4IDwgLTEgPyBwaSA6IE1hdGguYWNvcyh4KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFzaW4oeCkge1xuICByZXR1cm4geCA+IDEgPyBoYWxmUGkgOiB4IDwgLTEgPyAtaGFsZlBpIDogTWF0aC5hc2luKHgpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGF2ZXJzaW4oeCkge1xuICByZXR1cm4gKHggPSBzaW4oeCAvIDIpKSAqIHg7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-geo-voronoi/src/math.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/d3-geo-voronoi/src/voronoi.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo-voronoi/src/voronoi.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   geoVoronoi: () => (/* binding */ geoVoronoi)\n/* harmony export */ });\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/centroid.js\");\n/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-geo */ \"(ssr)/./node_modules/d3-geo/src/distance.js\");\n/* harmony import */ var _delaunay_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./delaunay.js */ \"(ssr)/./node_modules/d3-geo-voronoi/src/delaunay.js\");\n\n\n\nfunction geoVoronoi(data) {\n  const v = function (data) {\n    v.delaunay = null;\n    v._data = data;\n\n    if (typeof v._data === \"object\" && v._data.type === \"FeatureCollection\") {\n      v._data = v._data.features;\n    }\n    if (typeof v._data === \"object\") {\n      const temp = v._data\n        .map((d) => [v._vx(d), v._vy(d), d])\n        .filter((d) => isFinite(d[0] + d[1]));\n      v.points = temp.map((d) => [d[0], d[1]]);\n      v.valid = temp.map((d) => d[2]);\n      v.delaunay = (0,_delaunay_js__WEBPACK_IMPORTED_MODULE_0__.geoDelaunay)(v.points);\n    }\n    return v;\n  };\n\n  v._vx = function (d) {\n    if (typeof d == \"object\" && \"type\" in d) {\n      return (0,d3_geo__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(d)[0];\n    }\n    if (0 in d) return d[0];\n  };\n  v._vy = function (d) {\n    if (typeof d == \"object\" && \"type\" in d) {\n      return (0,d3_geo__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(d)[1];\n    }\n    if (1 in d) return d[1];\n  };\n\n  v.x = function (f) {\n    if (!f) return v._vx;\n    v._vx = f;\n    return v;\n  };\n  v.y = function (f) {\n    if (!f) return v._vy;\n    v._vy = f;\n    return v;\n  };\n\n  v.polygons = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n\n    if (!v.delaunay) return false;\n    const coll = {\n      type: \"FeatureCollection\",\n      features: [],\n    };\n    if (v.valid.length === 0) return coll;\n    v.delaunay.polygons.forEach((poly, i) =>\n      coll.features.push({\n        type: \"Feature\",\n        geometry: !poly\n          ? null\n          : {\n              type: \"Polygon\",\n              coordinates: [\n                [...poly, poly[0]].map((i) => v.delaunay.centers[i]),\n              ],\n            },\n        properties: {\n          site: v.valid[i],\n          sitecoordinates: v.points[i],\n          neighbours: v.delaunay.neighbors[i], // not part of the public API\n        },\n      })\n    );\n    if (v.valid.length === 1)\n      coll.features.push({\n        type: \"Feature\",\n        geometry: { type: \"Sphere\" },\n        properties: {\n          site: v.valid[0],\n          sitecoordinates: v.points[0],\n          neighbours: [],\n        },\n      });\n    return coll;\n  };\n\n  v.triangles = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n\n    return {\n      type: \"FeatureCollection\",\n      features: v.delaunay.triangles\n        .map((tri, index) => {\n          tri = tri.map((i) => v.points[i]);\n          tri.center = v.delaunay.centers[index];\n          return tri;\n        })\n        .filter((tri) => (0,_delaunay_js__WEBPACK_IMPORTED_MODULE_0__.excess)(tri) > 0)\n        .map((tri) => ({\n          type: \"Feature\",\n          properties: {\n            circumcenter: tri.center,\n          },\n          geometry: {\n            type: \"Polygon\",\n            coordinates: [[...tri, tri[0]]],\n          },\n        })),\n    };\n  };\n\n  v.links = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n    const _distances = v.delaunay.edges.map((e) =>\n        (0,d3_geo__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(v.points[e[0]], v.points[e[1]])\n      ),\n      _urquart = v.delaunay.urquhart(_distances);\n    return {\n      type: \"FeatureCollection\",\n      features: v.delaunay.edges.map((e, i) => ({\n        type: \"Feature\",\n        properties: {\n          source: v.valid[e[0]],\n          target: v.valid[e[1]],\n          length: _distances[i],\n          urquhart: !!_urquart[i],\n        },\n        geometry: {\n          type: \"LineString\",\n          coordinates: [v.points[e[0]], v.points[e[1]]],\n        },\n      })),\n    };\n  };\n\n  v.mesh = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n    return {\n      type: \"MultiLineString\",\n      coordinates: v.delaunay.edges.map((e) => [\n        v.points[e[0]],\n        v.points[e[1]],\n      ]),\n    };\n  };\n\n  v.cellMesh = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    if (!v.delaunay) return false;\n    const { centers, polygons } = v.delaunay;\n    const coordinates = [];\n    for (const p of polygons) {\n      if (!p) continue;\n      for (\n        let n = p.length, p0 = p[n - 1], p1 = p[0], i = 0;\n        i < n;\n        p0 = p1, p1 = p[++i]\n      ) {\n        if (p1 > p0) {\n          coordinates.push([centers[p0], centers[p1]]);\n        }\n      }\n    }\n    return {\n      type: \"MultiLineString\",\n      coordinates,\n    };\n  };\n\n  v._found = undefined;\n  v.find = function (x, y, radius) {\n    v._found = v.delaunay.find(x, y, v._found);\n    if (!radius || (0,d3_geo__WEBPACK_IMPORTED_MODULE_2__[\"default\"])([x, y], v.points[v._found]) < radius)\n      return v._found;\n  };\n\n  v.hull = function (data) {\n    if (data !== undefined) {\n      v(data);\n    }\n    const hull = v.delaunay.hull,\n      points = v.points;\n    return hull.length === 0\n      ? null\n      : {\n          type: \"Polygon\",\n          coordinates: [[...hull.map((i) => points[i]), points[hull[0]]]],\n        };\n  };\n\n  return data ? v(data) : v;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/d3-geo-voronoi/src/voronoi.js\n");

/***/ })

};
;